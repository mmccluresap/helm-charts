{{- define "hsm_migration_job" -}}
{{- $envAll := index . 0 -}}
{{- $hsm := index . 1 -}}
{{- $secrets := lookup "v1" "Secret" $envAll.Release.Namespace (print $envAll.Release.Name "-secrets") -}}

apiVersion: batch/v1
kind: Job
metadata:
  name: barbican-migration-job-{{ $hsm.name }}
  labels:
    system: openstack
    type: configuration
    component: barbican
    ccloud/service: barbican
    ccloud/support-group: identity
  annotations:
    "helm.sh/hook": post-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        alert-tier: os
        alert-service: barbican
        {{ tuple $envAll "barbican" "migration" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | nindent 8 }}
      annotations:
        {{- include "utils.linkerd.pod_and_service_annotation" $envAll | indent 8 }}
    spec:
      restartPolicy: OnFailure
      initContainers:
        {{- tuple $envAll (dict "service" (include "barbican.db_service" $envAll)) | include "utils.snippets.kubernetes_entrypoint_init_container" | indent 6 }}
      containers:
        - name: barbican-migration
          image: {{ required ".Values.global.registry is missing" $envAll.Values.global.registry }}/loci-barbican:{{ required ".Values.imageVersionBarbicanApi is missing" $envAll.Values.imageVersionBarbicanApi }}
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - -c
            - |
              barbican-manage db upgrade
              {{- include "utils.script.job_finished_hook" $envAll | nindent 14 }}
          env:
            {{- if $envAll.Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: barbican.DSN.python
            {{- end }}
          {{- if $envAll.Values.api.resources.enabled }}
          resources:
            limits:
              cpu: {{ $envAll.Values.api.resources.limits.cpu | quote }}
              memory: {{ $envAll.Values.api.resources.limits.memory | quote }}
            requests:
              cpu: {{ $envAll.Values.api.resources.requests.cpu | quote }}
              memory: {{ $envAll.Values.api.resources.requests.memory | quote }}
          {{- end }}
          volumeMounts:
            - name: etcbarbican
              mountPath: /etc/barbican
            - name: barbican-etc-{{ $hsm.name }}
              mountPath: /etc/barbican/barbican.conf
              subPath: barbican.conf
              readOnly: true
            - name: barbican-etc-{{ $hsm.name }}
              mountPath: /etc/barbican/policy.yaml
              subPath: policy.yaml
              readOnly: true
            - name: barbican-etc-{{ $hsm.name }}
              mountPath: /etc/barbican/logging.ini
              subPath: logging.ini
              readOnly: true
            {{- if $secrets }}
            - name: barbican-etc-{{ $hsm.name }}-confd
              mountPath: /etc/barbican/barbican.conf.d
              readOnly: true
            {{- end }}
            {{- include "utils.trust_bundle.volume_mount" $envAll | indent 12 }}
      volumes:
        - name: etcbarbican
          emptyDir: {}
        - name: barbican-etc-{{ $hsm.name }}
          configMap:
            name: barbican-etc-{{ $hsm.name }}
        {{- if $secrets }}
        - name: barbican-etc-{{ $hsm.name }}-confd
          secret:
            secretName: {{ $envAll.Release.Name }}-secrets
            items:
              - key: secrets.conf
                path: secrets.conf
        {{- end }}
        {{- include "utils.trust_bundle.volumes" $envAll | indent 8 }}
{{- end }}
